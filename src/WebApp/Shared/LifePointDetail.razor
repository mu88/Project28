@using BusinessServices.Services
@using DTO.LifePoint
@inject ILifePointService _lifePointService
@inject IJSRuntime _jsRuntime
@inject NavigationManager _navigator
@inject IStringLocalizer<Main> _loc

<div class="card">
    @if (_imageUri != null)
    {
        <img src="@_imageUri" class="card-img-top" alt="The image">
    }
    <div class="card-body">
        <h5 class="card-title">@_lifePoint.Caption</h5>
        <h6 class="card-subtitle mb-2 text-muted">@_loc["On"] @_lifePoint.Date @_loc["With"] @_lifePoint.CreatedBy.Name</h6>
        <p class="card-text" style="white-space: pre-line">@_lifePoint.Description</p>
        <button class="btn btn-outline-secondary" @onclick="OnDeleteClicked">@_loc["Delete"]</button>
    </div>
</div>

@code {

    private ExistingLifePoint _lifePoint = null!; // is initialized on component construction
    private IJSObjectReference _lifePointDetailModule = null!; // is initialized on component construction
    private Uri? _imageUri;

    [Parameter]
    public string Id { get; set; } = null!; // is initialized on component construction

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(Id)) { return; }

        _lifePoint = await _lifePointService.GetLifePointAsync(Guid.Parse(Id));
        if (_lifePoint.ImageId != null) { _imageUri = ConstructImageUri(_lifePoint.ImageId.Value); }

        await LoadLifePointDetailModuleAsync();

        await base.OnInitializedAsync();
    }

    private Uri ConstructImageUri(Guid imageId) => new(new Uri(_navigator.BaseUri), $"api/images/{_lifePoint.CreatedBy.Id}/{imageId.ToString()}");

    private async void OnDeleteClicked()
    {
        if (string.IsNullOrWhiteSpace(Id)) { return; }

        await _lifePointService.DeleteLifePointAsync(Guid.Parse(Id));
        await RemoveMarkerAsync();
    }

    private async Task RemoveMarkerAsync() => await _lifePointDetailModule.InvokeVoidAsync("removeMarkerOfLifePoint", Id);

    private async Task LoadLifePointDetailModuleAsync() => _lifePointDetailModule = await _jsRuntime.InvokeAsync<IJSObjectReference>("import", "./Shared/LifePointDetail.razor.js");

}